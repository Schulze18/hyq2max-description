#!/usr/bin/env python
import rospy
from tf import TransformBroadcaster
from nav_msgs.msg import Odometry
from rospy import Time 

def callback_ground(data):
    #rospy.loginfo(rospy.get_caller_id() + "I heard %s", data.child_frame_id)
    #rospy.loginfo(data.pose.pose.position)
    
    tf_bd = TransformBroadcaster()

    translation = (data.pose.pose.position.x, data.pose.pose.position.y, data.pose.pose.position.z)
    #translation = (0.0, 0.0, 0.0)
    #rotation = data.pose.pose.orientation #(0.0, 0.0, 0.0, 1.0)
    rotation = (data.pose.pose.orientation.x, data.pose.pose.orientation.y, data.pose.pose.orientation.z, data.pose.pose.orientation.w)

    tf_bd.sendTransform(translation, rotation, data.header.stamp, 'trunk', '/world')

if __name__ == '__main__':
    rospy.init_node('ground_truth_to_tf_node', anonymous=True)

    rospy.Subscriber("/hyq2max/ground_truth", Odometry, callback_ground)

    # spin() simply keeps python from exiting until this node is stopped
    rospy.spin()